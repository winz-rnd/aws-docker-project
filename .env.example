# AWS Docker 프로젝트 환경 변수 예시
# 실제 사용시 .env 파일로 복사하고 값을 수정하세요

# =============================================================================
# 데이터베이스 설정
# =============================================================================
DATABASE_URL=jdbc:mysql://localhost:3306/aws_docker_db?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
DATABASE_USERNAME=appuser
DATABASE_PASSWORD=apppassword
DATABASE_DRIVER=com.mysql.cj.jdbc.Driver

# MySQL 루트 설정
MYSQL_ROOT_PASSWORD=password
MYSQL_DATABASE=aws_docker_db
MYSQL_USER=appuser
MYSQL_PASSWORD=apppassword

# =============================================================================
# Spring Boot 애플리케이션 설정
# =============================================================================
SPRING_PROFILES_ACTIVE=dev
SERVER_PORT=8080

# JPA 설정
JPA_DDL_AUTO=update
JPA_SHOW_SQL=true
HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect

# 로깅 설정
LOG_LEVEL=DEBUG
WEB_LOG_LEVEL=INFO
SQL_LOG_LEVEL=DEBUG

# =============================================================================
# Flutter 프론트엔드 설정
# =============================================================================
API_URL=http://localhost:8080
APP_NAME=AWS Docker Frontend
APP_VERSION=1.0.0

# =============================================================================
# AWS 설정 (프로덕션용)
# =============================================================================
AWS_REGION=ap-northeast-2
AWS_ACCESS_KEY_ID=your-access-key-id
AWS_SECRET_ACCESS_KEY=your-secret-access-key

# ECR 설정
ECR_REPOSITORY=aws-docker-backend
ECR_REGISTRY=123456789012.dkr.ecr.ap-northeast-2.amazonaws.com

# App Runner 설정
APP_RUNNER_SERVICE_ARN=arn:aws:apprunner:ap-northeast-2:123456789012:service/aws-docker-backend/abcdefghijk

# S3 및 CloudFront 설정
S3_BUCKET=aws-docker-frontend-bucket
CLOUDFRONT_DISTRIBUTION_ID=ABCDEFGHIJK123

# RDS 설정 (프로덕션)
RDS_ENDPOINT=aws-docker-db.abcdefghijk.ap-northeast-2.rds.amazonaws.com
RDS_PORT=3306
RDS_DATABASE=aws_docker_db
RDS_USERNAME=admin
RDS_PASSWORD=your-secure-password

# =============================================================================
# GitHub Actions 설정
# =============================================================================
# GitHub Secrets에 설정할 값들
# AWS_ROLE_TO_ASSUME=arn:aws:iam::123456789012:role/GitHubActionsRole
# APP_RUNNER_SERVICE_ARN=arn:aws:apprunner:ap-northeast-2:123456789012:service/aws-docker-backend/abcdefghijk
# CLOUDFRONT_DISTRIBUTION_ID=ABCDEFGHIJK123

# =============================================================================
# 보안 설정
# =============================================================================
# JWT 토큰 설정 (향후 사용)
JWT_SECRET=your-very-long-and-secure-jwt-secret-key
JWT_EXPIRATION=86400

# 암호화 설정
ENCRYPTION_KEY=your-encryption-key
SALT_ROUNDS=10

# =============================================================================
# 캐시 설정 (Redis)
# =============================================================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password
REDIS_DATABASE=0
REDIS_TTL=300

# =============================================================================
# 모니터링 및 로깅
# =============================================================================
# Sentry 설정 (선택사항)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# New Relic 설정 (선택사항)
NEW_RELIC_LICENSE_KEY=your-new-relic-license-key
NEW_RELIC_APP_NAME=AWS Docker Backend

# =============================================================================
# 이메일 설정 (향후 사용)
# =============================================================================
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_FROM=noreply@yourdomain.com

# =============================================================================
# 외부 API 설정
# =============================================================================
# OpenAI API (향후 사용)
OPENAI_API_KEY=your-openai-api-key

# Slack Webhook (알림용)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/webhook/url

# =============================================================================
# 개발 도구 설정
# =============================================================================
# 개발 환경 플래그
DEBUG=true
DEVELOPMENT_MODE=true

# 테스트 설정
TEST_DATABASE_URL=jdbc:h2:mem:testdb
TEST_DATABASE_USERNAME=sa
TEST_DATABASE_PASSWORD=

# 성능 프로파일링
ENABLE_PROFILING=false
PROFILING_SAMPLE_RATE=0.1